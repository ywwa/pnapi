import { boolean, number, object, string, type ZodSchema } from "zod";
import {
  CurrencyEnum,
  ScaleEnum,
  StatusEnum,
  dateSchema,
} from "../shared.schema";
import { customerResponseSchema } from "./Customers.schema";

export const subscriptionResponseSchema: ZodSchema = object({
  id: string(),
  pretty_id: string(),
  store_id: string(),
  customer: customerResponseSchema,
  status: StatusEnum,
  checkout_id: string().nullable(),
  checkout_line_id: string().nullable(),
  billing_name: string().nullable(),
  billing_email: string().nullable(),
  billing_country: string().nullable(),
  customer_ip: string().nullable(),
  gift: boolean(),
  gift_to_customer: customerResponseSchema.nullable(),
  product_id: string(),
  product_version_id: string(),
  product_name: string(),
  product_image_url: string().nullable(),
  interval_value: number(),
  interval_scale: ScaleEnum,
  currency: CurrencyEnum,
  tax_inclusive: boolean(),
  price: number(),
  price_str: string(),
  discount_amount: number(),
  discount_amount_str: string(),
  subtotal_amount: number(),
  subtotal_amount_str: string(),
  tax_amount: number(),
  tax_amount_str: string(),
  total_amount: number(),
  total_amount_str: string(),
  initial_discount_amount: number(),
  initial_discount_amount_str: string(),
  initial_subtotal_amount: number(),
  initial_subtotal_amount_str: string(),
  initial_giftcard_usage_amount: number(),
  initial_giftcard_usage_amount_str: string(),
  initial_tax_amount: number(),
  initial_tax_amount_str: string(),
  current_period_start: dateSchema,
  current_period_end: dateSchema,
  billing_cycle_sequence: number(),
  created_at: dateSchema,
  updated_at: dateSchema.nullable(),
  active_at: dateSchema,
  canceled_at: dateSchema.nullable(),
  cancel_reason: string().nullable(),
});

export const subscriptionLookupSchema: ZodSchema = object({
  customer_id: string(),
  limit: number(),
  after: string(),
  before: string(),
}).partial();
